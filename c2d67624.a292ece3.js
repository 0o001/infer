(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{254:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return i})),n.d(r,"metadata",(function(){return c})),n.d(r,"rightToc",(function(){return l})),n.d(r,"default",(function(){return p}));var t=n(2),o=n(9),a=(n(0),n(298)),i={id:"internal-API",title:"Infer Internal OCaml Modules API"},c={id:"version-1.0.0/internal-API",isDocsHomePage:!1,title:"Infer Internal OCaml Modules API",description:"Browse the generated documentation for Infer's OCaml code here.",source:"@site/versioned_docs/version-1.0.0/04-internal-API.md",permalink:"/docs/internal-API",version:"1.0.0",sidebar:"version-1.0.0/docs",previous:{title:"Building checkers with the Infer.AI framework",permalink:"/docs/absint-framework"},next:{title:"Documentation Versions",permalink:"/docs/versions"}},l=[],u={rightToc:l};function p(e){var r=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},u,n,{components:r,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Browse the generated documentation for Infer's OCaml code ",Object(a.b)("a",Object(t.a)({parentName:"p"},{href:"/odoc/1.0.0/infer/infer.html"}),"here"),"."),Object(a.b)("p",null,"You can also generate these pages from within an Infer repository with ",Object(a.b)("inlineCode",{parentName:"p"},"make doc"),"."))}p.isMDXComponent=!0},298:function(e,r,n){"use strict";n.d(r,"a",(function(){return s})),n.d(r,"b",(function(){return d}));var t=n(0),o=n.n(t);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),p=function(e){var r=o.a.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},s=function(e){var r=p(e.components);return o.a.createElement(u.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return o.a.createElement(o.a.Fragment,{},r)}},m=o.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,a=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(n),m=t,d=s["".concat(i,".").concat(m)]||s[m]||f[m]||a;return n?o.a.createElement(d,c(c({ref:r},u),{},{components:n})):o.a.createElement(d,c({ref:r},u))}));function d(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:t,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);