"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6934],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return m}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),u=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},s=function(e){var n=u(e.components);return t.createElement(l.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(r),m=o,d=p["".concat(l,".").concat(m)]||p[m]||f[m]||i;return r?t.createElement(d,a(a({ref:n},s),{},{components:r})):t.createElement(d,a({ref:n},s))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=r[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4610:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var t=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],c={id:"internal-API",title:"Infer Internal OCaml Modules API"},l=void 0,u={unversionedId:"internal-API",id:"version-1.0.0/internal-API",title:"Infer Internal OCaml Modules API",description:"Browse the generated documentation for Infer's OCaml code here.",source:"@site/versioned_docs/version-1.0.0/04-internal-API.md",sourceDirName:".",slug:"/internal-API",permalink:"/docs/1.0.0/internal-API",tags:[],version:"1.0.0",sidebarPosition:4,frontMatter:{id:"internal-API",title:"Infer Internal OCaml Modules API"},sidebar:"version-1.0.0/docs",previous:{title:"Building checkers with the Infer.AI framework",permalink:"/docs/1.0.0/absint-framework"},next:{title:"Documentation Versions",permalink:"/docs/1.0.0/versions"}},s=[],f={toc:s};function p(e){var n=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},f,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Browse the generated documentation for Infer's OCaml code ",(0,i.kt)("a",{parentName:"p",href:"pathname:///odoc/1.0.0/infer/infer.html"},"here"),"."),(0,i.kt)("p",null,"You can also generate these pages from within an Infer repository with ",(0,i.kt)("inlineCode",{parentName:"p"},"make doc"),"."))}p.isMDXComponent=!0}}]);